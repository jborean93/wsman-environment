#!/usr/bin/env bash

set -o pipefail -eux

DEFAULT_SUBJECT="${1}"
PASSWORD="${2}"

generate () {
    NAME="${1}"
    SUBJECT="${2}"
    KEY="${3}"
    ALGORITHM="${4}"
    SELF_SIGNED="${5}"
    CA_NAME="${6}"
    CA_OPTIONS=()
    EXTRA_OPTIONS=()

    if [ ! -z "${ALGORITHM}" ]; then
        EXTRA_OPTIONS=("-sigopt" "rsa_padding_mode:${ALGORITHM}")
    fi

    if [ "${SELF_SIGNED}" = false ]; then
        CA_OPTIONS=("-CA" "${CA_NAME}.pem" "-CAkey" "${CA_NAME}.key" "-CAcreateserial")
    else
        CA_OPTIONS=("-signkey" "${NAME}.key")
    fi

    cat > openssl.conf << EOL
distinguished_name = req_distinguished_name

[req_distinguished_name]

[req]
basicConstraints = CA:FALSE
keyUsage = digitalSignature,keyEncipherment
extendedKeyUsage = serverAuth
subjectAltName = DNS:${SUBJECT}
EOL

    echo "Generating ${NAME} signed cert"
    openssl req \
        -new \
        "-${KEY}" \
        -subj "/CN=${SUBJECT}" \
        -newkey rsa:2048 \
        -keyout "${NAME}.key" \
        -out "${NAME}.csr" \
        -config openssl.conf \
        -reqexts req \
        -passin pass:"${PASSWORD}" \
        -passout pass:"${PASSWORD}" \
        ${EXTRA_OPTIONS[@]}

    openssl x509 \
        -req \
        -in "${NAME}.csr" \
        -"-${KEY}" \
        -out "${NAME}.pem" \
        -days 365 \
        -extfile openssl.conf \
        -extensions req \
        -passin pass:"${PASSWORD}" \
        ${EXTRA_OPTIONS[@]} \
        ${CA_OPTIONS[@]}

    openssl pkcs12 \
        -export \
        -out "${NAME}.pfx" \
        -inkey "${NAME}.key" \
        -in "${NAME}.pem" \
        -passin pass:"${PASSWORD}" \
        -passout pass:"${PASSWORD}"

    rm openssl.conf
}

echo "Generating system trusted CA issuer"
openssl genrsa \
    -aes256 \
    -out ca.key \
    -passout pass:"${PASSWORD}"

openssl req \
    -new \
    -x509 \
    -days 365 \
    -key ca.key \
    -out ca.pem \
    -subj "/CN=WinRM Root" \
    -passin pass:"${PASSWORD}"

echo "Generating untrusted CA issuer"
openssl genrsa \
    -aes256 \
    -out ca_explicit.key \
    -passout pass:"${PASSWORD}"

openssl req \
    -new \
    -x509 \
    -days 365 \
    -key ca_explicit.key \
    -out ca_explicit.pem \
    -subj "/CN=WinRM Root Explicit" \
    -passin pass:"${PASSWORD}"

echo "Generating client auth for {{ local_username }}"
cat > openssl.conf << EOL
distinguished_name = req_distinguished_name
[req_distinguished_name]
[v3_req_client]
extendedKeyUsage = clientAuth
subjectAltName = otherName:1.3.6.1.4.1.311.20.2.3;UTF8:{{ local_username }}@localhost
EOL

openssl req \
  -new \
  -sha256 \
  -subj "/CN={{ local_username }}" \
  -newkey rsa:2048 \
  -keyout client_auth_password.key \
  -out client_auth.csr \
  -config openssl.conf \
  -reqexts v3_req_client \
  -passin pass:"${PASSWORD}" \
  -passout pass:"${PASSWORD}"

openssl x509 \
  -req \
  -in client_auth.csr \
  -sha256 \
  -out client_auth.pem \
  -days 365 \
  -extfile openssl.conf \
  -extensions v3_req_client \
  -passin pass:"${PASSWORD}" \
  -CA ca.pem \
  -CAkey ca.key \
  -CAcreateserial

openssl pkcs12 \
  -export \
  -out client_auth.pfx \
  -inkey client_auth_password.key \
  -in client_auth.pem \
  -passin pass:"${PASSWORD}" \
  -passout pass:"${PASSWORD}"

openssl rsa \
  -in client_auth_password.key \
  -out client_auth.key \
  -passin pass:"${PASSWORD}"

rm openssl.conf

# One for ldaps
generate ldaps dc.{{ domain_realm }} sha256 "" false ca

{% for info in certificate_info %}
{% if '-' in info.algorithm | default('sha256') %}
{% set key = info.algorithm.split('-')[0] %}
{% set algorithm = info.algorithm.split('-')[1] %}
{% else %}
{% set key = info.algorithm | default('sha256') %}
{% set algorithm = '""' %}
{% endif %}
generate {{ info.test }} {{ ('subject' in info) | ternary(info.subject, '"${DEFAULT_SUBJECT}"') }} {{ key }} {{ algorithm }} {{ info.self_signed | default(False) | bool | lower }} {{ (info.system_ca | default(True)) | ternary("ca", "ca_explicit") }}
{% endfor %}

touch complete.txt

